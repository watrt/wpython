内部文件系统
=======================

您的设备包含一个文件系统。此文件系统使用FAT格式且在MicroPython固件后储存在Flash中。

创建并读取文件
--------------------------

ESP32中的MicroPython支持使用内置open()函数以标准方式访问Python中的文件。

尝试以下方法来创建文件：

    >>> f = open('data.txt', 'w')
    >>> f.write('some data')
    9
    >>> f.close()

"9" 是使用 ``write()`` 方法写入的字节数。然后您即可使用以下指令读回此新文件的内容::

    >>> f = open('data.txt')
    >>> f.read()
    'some data'
    >>> f.close()

注意：打开文件的默认模式为只读模式下的文本文件。指定第二个参数为 ``'wb'`` 可以二进制模式打开写入，``'rb'`` 可以二进制模式读取。

列出文件及其他
---------------------

os 模块可用于对文件系统的控制。首先引入模块：

    >>> import os

然后尝试列出文件系统的内容：

    >>> os.listdir()
    ['boot.py', 'port_config.py', 'data.txt']

您可创建目录::

    >>> os.mkdir('dir')

删除文件::

    >>> os.remove('data.txt')

启动脚本
----------------

有两个文件在ESP32启动时进行特殊处理：boot.py和main.py。boot.py脚本首先执行（若存在），
此文件结束后即执行main.py脚本。您可自行创建文件并把你想开机自启动的代码放进去。

通过WebREPL访问文件系统 
------------------------------------

您可通过WebREPL在浏览器中使用网页客户端或通过命令行工具来访问文件系统。关于WebREPL的更多信息，请查阅快速参考和章节。
